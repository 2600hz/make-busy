version: '3.5'

x-node-env:
  &kz-env
    KAZOO_COOKIE: change_me
    LC_CTYPE: en_US.UTF-8
    LANG: en_US.UTF-8
    CODE_LOADING_MODE: interactive
    RELX_REPLACE_OS_VARS: "true"
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/kazoo/_rel/kazoo/bin"

x-media-cfg:
  &kz-media
    - type: bind
      source: ../../../../kazoo-pr
      target: /opt/kazoo
      read_only: true
    - type: bind
      source: ./config.ini
      target: /etc/kazoo/config.ini
      read_only: true
    - type: bind
      source: ../media-files/kazoo
      target: /media-files
      read_only: true

x-devnode-cfg:
  &kz-dev
    - type: bind
      source: ../../../../kazoo-pr
      target: /opt/kazoo
      read_only: false
    - type: bind
      source: ./config.ini
      target: /etc/kazoo/config.ini
      read_only: true

services:

  couchdb:
    image: apache/couchdb
    hostname: 'couchdb-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    volumes:
      - type: bind
        source: ./couchdb_cluster.ini
        target: /opt/couchdb/local.d/cluster.ini
      - type: tmpfs
        target: /opt/couchdb/data
    deploy:
      endpoint_mode: dnsrr
    networks:
      - kazoo

  rabbitmq:
    image: rabbitmq:3-management
    hostname: 'rabbitmq-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    deploy:
      endpoint_mode: dnsrr
    networks:
      - kazoo

  freeswitch:
    image: 2600hz/kazoo-freeswitch:alpine-edge
    hostname: 'freeswitch-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    volumes:
      - type: bind
        source: ../media-files/freeswitch
        target: /usr/share/freeswitch/sounds
        read_only: true
    deploy:
      endpoint_mode: dnsrr
    networks:
      - kazoo

  kazoo:
    image: ${KAZOO_DEV_BASE_CONTAINER}
    environment:
       << : *kz-env
       KAZOO_NODE: apps
       KAZOO_APPS: "sysconf,blackhole,callflow,conference,registrar,pusher,stepswitch,trunkstore"
    volumes: *kz-dev
    hostname: 'kazoo-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    tty: true
    command: ["kazoo", "foreground"]
    networks:
      - kazoo

  crossbar:
    image: ${KAZOO_DEV_BASE_CONTAINER}
    environment:
       << : *kz-env
       KAZOO_NODE: api
       KAZOO_APPS: "crossbar"
    hostname: 'crossbar-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    volumes: *kz-dev
    command: ["kazoo", "foreground"]
    tty: true
    networks:
      - kazoo

  callmgr:
    image: ${KAZOO_DEV_BASE_CONTAINER}
    environment:
       << : *kz-env
       KAZOO_NODE: ecallmgr
       KAZOO_APPS: "ecallmgr"
    hostname: 'callmgr-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    volumes: *kz-dev
    command: ["kazoo", "foreground"]
    tty: true
    networks:
      - kazoo

  media:
    image: ${KAZOO_DEV_BASE_CONTAINER}
    environment:
       << : *kz-env
       KAZOO_NODE: media
       KAZOO_APPS: "media_mgr"
    hostname: 'media-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    volumes: *kz-media
    command: ["kazoo", "foreground"]
    tty: true
    networks:
      - kazoo

  kamailio:
    image: 2600hz/kazoo-kamailio:alpine-edge
    hostname: 'kamailio-{{.Task.Slot}}.{{index .Service.Labels "com.docker.stack.namespace"}}'
    environment:
       ENABLE_SERVICE_NAME: "false"
       ENABLE_ADVERTISE: "false"
    networks:
       - kazoo

networks:
    kazoo:
       attachable: true
